{
  "stats": {
    "suites": 6,
    "tests": 12,
    "passes": 12,
    "pending": 0,
    "failures": 0,
    "start": "2023-02-01T06:32:43.835Z",
    "end": "2023-02-01T06:32:50.177Z",
    "duration": 6342,
    "testsRegistered": 12,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "7fc1da0b-0a7f-465c-aa78-e893b83bd9df",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7e10ab02-7faf-4ae8-b1b1-f7deccae94a8",
          "title": "Integration Testing - Testing Basic Get Route For Health Checks",
          "fullFile": "G:\\Respo-Folder\\Visual Studio Code\\DLE Site\\Express Server-Backend\\tests\\integration-tests\\integration.test.js",
          "file": "\\tests\\integration-tests\\integration.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Testing Basic Get Route",
              "fullTitle": "Integration Testing - Testing Basic Get Route For Health Checks Testing Basic Get Route",
              "timedOut": false,
              "duration": 32,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(server.app).get(\"/\")\n    .expect(200)\n    .expect({\"status\":200,\"message\":\"Server Loaded Successfully\",\"Description\":\"DLE Backend Server RestAPI For a MEAN Application Project\",\"Port\":\"5500\",\"BaseUrl\":\"http://localhost:5500\"},done);",
              "err": {},
              "uuid": "f60ee563-4340-47d6-8e22-77be72f5a4df",
              "parentUUID": "7e10ab02-7faf-4ae8-b1b1-f7deccae94a8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f60ee563-4340-47d6-8e22-77be72f5a4df"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 32,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "e10791a9-ac7e-4d61-8c02-4650970fc6f4",
          "title": "Integration Testing - Testing User Routes",
          "fullFile": "G:\\Respo-Folder\\Visual Studio Code\\DLE Site\\Express Server-Backend\\tests\\integration-tests\\integration.test.js",
          "file": "\\tests\\integration-tests\\integration.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Testing Post User Login Route With Status Returned from Database",
              "fullTitle": "Integration Testing - Testing User Routes Testing Post User Login Route With Status Returned from Database",
              "timedOut": false,
              "duration": 3998,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let result = await request(server.app).post(\"/api/auth/login\")\n    .send({\n        \"email\": \"am1a@gmail.com\",\n        \"password\":\"ama123\",\n        \"type\":\"staff\"\n    })\nchai.assert.equal(200,result.status,'Wrong Message Returned!')",
              "err": {},
              "uuid": "c8c4891f-da23-4daf-8ce4-5da04bac4746",
              "parentUUID": "e10791a9-ac7e-4d61-8c02-4650970fc6f4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Testing Post User Login Route With Invalid User Credentials",
              "fullTitle": "Integration Testing - Testing User Routes Testing Post User Login Route With Invalid User Credentials",
              "timedOut": false,
              "duration": 610,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let result = await request(server.app).post(\"/api/auth/login\")\n    .send({\n        \"email\": \"am1a@gmail.com\",\n        \"password\":\"ama\",\n        \"type\":\"staff\"\n    })\nchai.assert.equal(400,result.body.Status,'Wrong Message Returned!')",
              "err": {},
              "uuid": "f44a5d79-3475-46bb-b8b8-d57bc40453d6",
              "parentUUID": "e10791a9-ac7e-4d61-8c02-4650970fc6f4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Testing Post User Login Route With Invalid email format",
              "fullTitle": "Integration Testing - Testing User Routes Testing Post User Login Route With Invalid email format",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let result = await request(server.app).post(\"/api/auth/login\")\n    .send({\n        \"email\": \"s\",\n        \"password\":\"ama123\",\n        \"type\":\"staff\"\n    })\nchai.assert.equal('\"email\" must be a valid email',result.body.Error,'Wrong Message Returned!')",
              "err": {},
              "uuid": "13b59c99-a174-43bf-a720-3dd634d2480f",
              "parentUUID": "e10791a9-ac7e-4d61-8c02-4650970fc6f4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c8c4891f-da23-4daf-8ce4-5da04bac4746",
            "f44a5d79-3475-46bb-b8b8-d57bc40453d6",
            "13b59c99-a174-43bf-a720-3dd634d2480f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4617,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "4dc3f8c6-c606-4276-99b0-148212230d34",
          "title": "Integration Testing - Testing If JWT Works Correctly",
          "fullFile": "G:\\Respo-Folder\\Visual Studio Code\\DLE Site\\Express Server-Backend\\tests\\integration-tests\\integration.test.js",
          "file": "\\tests\\integration-tests\\integration.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Testing If Jwt Authentication Works by Calling unauthorized Route",
              "fullTitle": "Integration Testing - Testing If JWT Works Correctly Testing If Jwt Authentication Works by Calling unauthorized Route",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let result = await request(server.app).post(\"/api/user/get/id\")\n    .send({\n        \"email\": \"am1a@gmail.com\",\n        \"password\":\"ama123\",\n        \"type\":\"staff\"\n    })\nchai.assert.equal(406,result.status,'Wrong Message Returned!')",
              "err": {},
              "uuid": "36265517-786d-4ba9-aba4-32dab2e78ed1",
              "parentUUID": "4dc3f8c6-c606-4276-99b0-148212230d34",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "36265517-786d-4ba9-aba4-32dab2e78ed1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "fd05a040-227e-4aa0-9d5a-db160abac735",
          "title": "Integration Testing - Testing If User Works Correctly",
          "fullFile": "G:\\Respo-Folder\\Visual Studio Code\\DLE Site\\Express Server-Backend\\tests\\integration-tests\\integration.test.js",
          "file": "\\tests\\integration-tests\\integration.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Testing If User is rejected with Wrong Type",
              "fullTitle": "Integration Testing - Testing If User Works Correctly Testing If User is rejected with Wrong Type",
              "timedOut": false,
              "duration": 17,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let result = await request(server.app).post(\"/api/user/get/id\")\n    .set('Cookie', 'cookie=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiIyMzEwMDAiLCJlbWFpbCI6ImFtMWFAZ21haWwuY29tIiwidHlwZSI6InN0YWZmIiwiaWF0IjoxNjc1MjE5NDQ0fQ.H8gH_cHtm-JHMNEd4OwBl3mcmV2WsEVbW9Wd0c9m4_o')\n    .send({\n        \"email\": \"am1a@gmail.com\",\n        \"type\":\"none\"\n    })\nchai.assert.equal(500,result.status,'Wrong Message Returned!')",
              "err": {},
              "uuid": "f39a9de4-1fa3-444a-960d-9d05fb60acc8",
              "parentUUID": "fd05a040-227e-4aa0-9d5a-db160abac735",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f39a9de4-1fa3-444a-960d-9d05fb60acc8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "db990c76-ec1f-42a1-94b4-7e92d2d9abd6",
          "title": "Integration Testing - Testing If Subject Route Works Correctly",
          "fullFile": "G:\\Respo-Folder\\Visual Studio Code\\DLE Site\\Express Server-Backend\\tests\\integration-tests\\integration.test.js",
          "file": "\\tests\\integration-tests\\integration.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Testing If Subject Returns Subject with ID",
              "fullTitle": "Integration Testing - Testing If Subject Route Works Correctly Testing If Subject Returns Subject with ID",
              "timedOut": false,
              "duration": 424,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let result = await request(server.app).post(\"/api/subject/get/id\")\n    .set('Cookie', 'cookie=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiIyMzEwMDAiLCJlbWFpbCI6ImFtMWFAZ21haWwuY29tIiwidHlwZSI6InN0YWZmIiwiaWF0IjoxNjc1MjE5NDQ0fQ.H8gH_cHtm-JHMNEd4OwBl3mcmV2WsEVbW9Wd0c9m4_o')\n    .send({\n        \"_id\": \"S001\"\n    })\nchai.assert.equal(200,result.status,'Wrong Message Returned!')",
              "err": {},
              "uuid": "b5221da1-e069-4098-8685-679e5d9cb25f",
              "parentUUID": "db990c76-ec1f-42a1-94b4-7e92d2d9abd6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Testing If Subject Returns Subject Details",
              "fullTitle": "Integration Testing - Testing If Subject Route Works Correctly Testing If Subject Returns Subject Details",
              "timedOut": false,
              "duration": 151,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let result = await request(server.app).post(\"/api/subject/get/id\")\n    .set('Cookie', 'cookie=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiIyMzEwMDAiLCJlbWFpbCI6ImFtMWFAZ21haWwuY29tIiwidHlwZSI6InN0YWZmIiwiaWF0IjoxNjc1MjE5NDQ0fQ.H8gH_cHtm-JHMNEd4OwBl3mcmV2WsEVbW9Wd0c9m4_o')\n    .send({\n        \"_id\": \"S001\"\n    })\nchai.assert.equal('Economics',result.body.name,'Wrong Message Returned!')",
              "err": {},
              "uuid": "8ff50b58-02d9-4693-9767-ffa318604ba4",
              "parentUUID": "db990c76-ec1f-42a1-94b4-7e92d2d9abd6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Testing If Find Subject Returns Status 400 on Wrong ID",
              "fullTitle": "Integration Testing - Testing If Subject Route Works Correctly Testing If Find Subject Returns Status 400 on Wrong ID",
              "timedOut": false,
              "duration": 239,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let result = await request(server.app).post(\"/api/subject/get/id\")\n    .set('Cookie', 'cookie=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiIyMzEwMDAiLCJlbWFpbCI6ImFtMWFAZ21haWwuY29tIiwidHlwZSI6InN0YWZmIiwiaWF0IjoxNjc1MjE5NDQ0fQ.H8gH_cHtm-JHMNEd4OwBl3mcmV2WsEVbW9Wd0c9m4_o')\n    .send({\n        \"_id\": \"S01\"\n    })\nconsole.log(result)\nchai.assert.equal(400,result.body.status,'Wrong Message Returned!')",
              "err": {},
              "uuid": "e2f233b5-7ebf-4bd2-9137-6c02410d6f07",
              "parentUUID": "db990c76-ec1f-42a1-94b4-7e92d2d9abd6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b5221da1-e069-4098-8685-679e5d9cb25f",
            "8ff50b58-02d9-4693-9767-ffa318604ba4",
            "e2f233b5-7ebf-4bd2-9137-6c02410d6f07"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 814,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "a6da951d-a389-4a80-95df-a6216af3a081",
          "title": "Integration Testing - Testing If Assignment Route Works Correctly",
          "fullFile": "G:\\Respo-Folder\\Visual Studio Code\\DLE Site\\Express Server-Backend\\tests\\integration-tests\\integration.test.js",
          "file": "\\tests\\integration-tests\\integration.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Testing If Assignment Returns Assignment with ID",
              "fullTitle": "Integration Testing - Testing If Assignment Route Works Correctly Testing If Assignment Returns Assignment with ID",
              "timedOut": false,
              "duration": 167,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let result = await request(server.app).post(\"/api/assignment/get/id\")\n    .set('Cookie', 'cookie=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiIyMzEwMDAiLCJlbWFpbCI6ImFtMWFAZ21haWwuY29tIiwidHlwZSI6InN0YWZmIiwiaWF0IjoxNjc1MjE5NDQ0fQ.H8gH_cHtm-JHMNEd4OwBl3mcmV2WsEVbW9Wd0c9m4_o')\n    .send({\n        \"id\": \"S002-A01\",\n        \"subject\": \"S002\"\n    })\nchai.assert.equal(200,result.status,'Wrong Message Returned!')",
              "err": {},
              "uuid": "9253afaa-9847-47b7-ba24-c626eef12c33",
              "parentUUID": "a6da951d-a389-4a80-95df-a6216af3a081",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Testing If Assignment Has at least One Attachment",
              "fullTitle": "Integration Testing - Testing If Assignment Route Works Correctly Testing If Assignment Has at least One Attachment",
              "timedOut": false,
              "duration": 224,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let result = await request(server.app).post(\"/api/assignment/get/id\")\n    .set('Cookie', 'cookie=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiIyMzEwMDAiLCJlbWFpbCI6ImFtMWFAZ21haWwuY29tIiwidHlwZSI6InN0YWZmIiwiaWF0IjoxNjc1MjE5NDQ0fQ.H8gH_cHtm-JHMNEd4OwBl3mcmV2WsEVbW9Wd0c9m4_o')\n    .send({\n        \"id\": \"S002-A01\",\n        \"subject\": \"S002\"\n    })\nchai.assert.equal(true,result.body.url.length > 0,'Wrong Message Returned!')",
              "err": {},
              "uuid": "b75475c0-15da-4f6d-b393-b20727426868",
              "parentUUID": "a6da951d-a389-4a80-95df-a6216af3a081",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Testing If Find Assignment Returns Status 400 on Wrong ID",
              "fullTitle": "Integration Testing - Testing If Assignment Route Works Correctly Testing If Find Assignment Returns Status 400 on Wrong ID",
              "timedOut": false,
              "duration": 441,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let result = await request(server.app).post(\"/api/subject/get/id\")\n    .set('Cookie', 'cookie=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiIyMzEwMDAiLCJlbWFpbCI6ImFtMWFAZ21haWwuY29tIiwidHlwZSI6InN0YWZmIiwiaWF0IjoxNjc1MjE5NDQ0fQ.H8gH_cHtm-JHMNEd4OwBl3mcmV2WsEVbW9Wd0c9m4_o')\n    .send({\n        \"_id\": \"S01\"\n    })\nconsole.log(result)\nchai.assert.equal(400,result.body.status,'Wrong Message Returned!')",
              "err": {},
              "uuid": "003a842e-a596-4983-a81f-2e12803ef090",
              "parentUUID": "a6da951d-a389-4a80-95df-a6216af3a081",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9253afaa-9847-47b7-ba24-c626eef12c33",
            "b75475c0-15da-4f6d-b393-b20727426868",
            "003a842e-a596-4983-a81f-2e12803ef090"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 832,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}