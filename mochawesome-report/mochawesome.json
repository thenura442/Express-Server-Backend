{
  "stats": {
    "suites": 1,
    "tests": 6,
    "passes": 6,
    "pending": 0,
    "failures": 0,
    "start": "2023-02-01T03:17:34.038Z",
    "end": "2023-02-01T03:17:37.182Z",
    "duration": 3144,
    "testsRegistered": 6,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "927bab49-d513-4357-ba71-043f6592a605",
      "title": "",
      "fullFile": "G:\\Respo-Folder\\Visual Studio Code\\DLE Site\\Express Server-Backend\\tests\\integration-tests\\integration.test.js",
      "file": "\\tests\\integration-tests\\integration.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "21e76885-97f0-44c9-aea9-0b69beea1721",
          "title": "Integration Testing - Testing Routes as a Whole",
          "fullFile": "G:\\Respo-Folder\\Visual Studio Code\\DLE Site\\Express Server-Backend\\tests\\integration-tests\\integration.test.js",
          "file": "\\tests\\integration-tests\\integration.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Testing Basic Get Route",
              "fullTitle": "Integration Testing - Testing Routes as a Whole Testing Basic Get Route",
              "timedOut": false,
              "duration": 30,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(server.app).get(\"/\")\n    .expect(200)\n    .expect({\"status\":200,\"message\":\"Server Loaded Successfully\",\"Description\":\"DLE Backend Server RestAPI For a MEAN Application Project\",\"Port\":\"5500\",\"BaseUrl\":\"http://localhost:5500\"},done);",
              "err": {},
              "uuid": "3f3f0003-2994-4763-9c1d-5f1bad9a4845",
              "parentUUID": "21e76885-97f0-44c9-aea9-0b69beea1721",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Testing Post User Login Route With Status Returned from Database",
              "fullTitle": "Integration Testing - Testing Routes as a Whole Testing Post User Login Route With Status Returned from Database",
              "timedOut": false,
              "duration": 2692,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let result = await request(server.app).post(\"/api/auth/login\")\n    .send({\n        \"email\": \"am1a@gmail.com\",\n        \"password\":\"ama123\",\n        \"type\":\"staff\"\n    })\nchai.assert.equal(200,result.status,'Wrong Message Returned!')",
              "err": {},
              "uuid": "bb49e203-064a-409e-92f5-ab142ca3767d",
              "parentUUID": "21e76885-97f0-44c9-aea9-0b69beea1721",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Testing Post User Login Route With Invalid User Credentials",
              "fullTitle": "Integration Testing - Testing Routes as a Whole Testing Post User Login Route With Invalid User Credentials",
              "timedOut": false,
              "duration": 230,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let result = await request(server.app).post(\"/api/auth/login\")\n    .send({\n        \"email\": \"am1a@gmail.com\",\n        \"password\":\"ama\",\n        \"type\":\"staff\"\n    })\nchai.assert.equal(400,result.body.Status,'Wrong Message Returned!')",
              "err": {},
              "uuid": "bd8bd1fb-c3a3-410c-82a2-5539ddd3c48a",
              "parentUUID": "21e76885-97f0-44c9-aea9-0b69beea1721",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Testing Post User Login Route With Invalid email format",
              "fullTitle": "Integration Testing - Testing Routes as a Whole Testing Post User Login Route With Invalid email format",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let result = await request(server.app).post(\"/api/auth/login\")\n    .send({\n        \"email\": \"s\",\n        \"password\":\"ama\",\n        \"type\":\"staff\"\n    })\nchai.assert.equal('\"email\" must be a valid email',result.body.Error,'Wrong Message Returned!')",
              "err": {},
              "uuid": "31c197af-e6a2-4fc1-a375-cc015bd22ec9",
              "parentUUID": "21e76885-97f0-44c9-aea9-0b69beea1721",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Testing If Jwt Authentication Works by Calling unauthorized Route",
              "fullTitle": "Integration Testing - Testing Routes as a Whole Testing If Jwt Authentication Works by Calling unauthorized Route",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let result = await request(server.app).post(\"/api/user/get/id\")\n    .send({\n        \"email\": \"am1a@gmail.com\",\n        \"password\":\"ama123\",\n        \"type\":\"staff\"\n    })\nchai.assert.equal(406,result.status,'Wrong Message Returned!')",
              "err": {},
              "uuid": "8c654467-bd3e-4243-9b13-ac835ff40898",
              "parentUUID": "21e76885-97f0-44c9-aea9-0b69beea1721",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Testing If Required User is found",
              "fullTitle": "Integration Testing - Testing Routes as a Whole Testing If Required User is found",
              "timedOut": false,
              "duration": 166,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let result = await request(server.app).post(\"/api/user/get/id\")\n    .set('Cookie', 'cookie=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiIyMzEwMDAiLCJlbWFpbCI6ImFtMWFAZ21haWwuY29tIiwidHlwZSI6InN0YWZmIiwiaWF0IjoxNjc1MjE5NDQ0fQ.H8gH_cHtm-JHMNEd4OwBl3mcmV2WsEVbW9Wd0c9m4_o')\n    .send({\n        \"email\": \"am1a@gmail.com\",\n        \"type\":\"staff\"\n    })\nchai.assert.equal(200,result.status,'Wrong Message Returned!')",
              "err": {},
              "uuid": "abf236fb-226f-4191-b72d-7b38e02959c8",
              "parentUUID": "21e76885-97f0-44c9-aea9-0b69beea1721",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3f3f0003-2994-4763-9c1d-5f1bad9a4845",
            "bb49e203-064a-409e-92f5-ab142ca3767d",
            "bd8bd1fb-c3a3-410c-82a2-5539ddd3c48a",
            "31c197af-e6a2-4fc1-a375-cc015bd22ec9",
            "8c654467-bd3e-4243-9b13-ac835ff40898",
            "abf236fb-226f-4191-b72d-7b38e02959c8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3133,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}