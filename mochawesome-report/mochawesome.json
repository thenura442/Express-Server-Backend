{
  "stats": {
    "suites": 6,
    "tests": 12,
    "passes": 12,
    "pending": 0,
    "failures": 0,
    "start": "2023-02-01T12:34:59.825Z",
    "end": "2023-02-01T12:35:03.667Z",
    "duration": 3842,
    "testsRegistered": 12,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "f241698e-d7c7-442e-9c4a-0438ce83725c",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ff675238-58ef-4fb4-ab04-ddc0249160be",
          "title": "Integration Testing - Testing Basic Get Route For Health Checks",
          "fullFile": "G:\\Respo-Folder\\Visual Studio Code\\DLE Site\\Express Server-Backend\\tests\\integration-tests\\integration.test.js",
          "file": "\\tests\\integration-tests\\integration.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Testing Basic Get Route",
              "fullTitle": "Integration Testing - Testing Basic Get Route For Health Checks Testing Basic Get Route",
              "timedOut": false,
              "duration": 32,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(server.app).get(\"/\")\n    .expect(200)\n    .expect({\"status\":200,\"message\":\"Server Loaded Successfully\",\"Description\":\"DLE Backend Server RestAPI For a MEAN Application Project\",\"Port\":\"5500\",\"BaseUrl\":\"http://localhost:5500\"},done);",
              "err": {},
              "uuid": "0aa45f4e-5cb8-492c-8763-48ff0d72ce18",
              "parentUUID": "ff675238-58ef-4fb4-ab04-ddc0249160be",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0aa45f4e-5cb8-492c-8763-48ff0d72ce18"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 32,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "59e8def9-5913-4ced-b2f0-544bc1704fcd",
          "title": "Integration Testing - Testing User Routes",
          "fullFile": "G:\\Respo-Folder\\Visual Studio Code\\DLE Site\\Express Server-Backend\\tests\\integration-tests\\integration.test.js",
          "file": "\\tests\\integration-tests\\integration.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Testing Post User Login Route With Status Returned from Database",
              "fullTitle": "Integration Testing - Testing User Routes Testing Post User Login Route With Status Returned from Database",
              "timedOut": false,
              "duration": 2107,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let result = await request(server.app).post(\"/api/auth/login\")\n    .send({\n        \"email\": \"am1a@gmail.com\",\n        \"password\":\"ama123\",\n        \"type\":\"staff\"\n    })\nchai.assert.equal(200,result.status,'Wrong Message Returned!')",
              "err": {},
              "uuid": "5896a04c-ab8a-4c3e-a6d1-e8ca4d052cde",
              "parentUUID": "59e8def9-5913-4ced-b2f0-544bc1704fcd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Testing Post User Login Route With Invalid User Credentials",
              "fullTitle": "Integration Testing - Testing User Routes Testing Post User Login Route With Invalid User Credentials",
              "timedOut": false,
              "duration": 242,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let result = await request(server.app).post(\"/api/auth/login\")\n    .send({\n        \"email\": \"am1a@gmail.com\",\n        \"password\":\"ama\",\n        \"type\":\"staff\"\n    })\nchai.assert.equal(400,result.body.Status,'Wrong Message Returned!')",
              "err": {},
              "uuid": "accfa7a0-8d9f-418f-9182-8e0641b036c2",
              "parentUUID": "59e8def9-5913-4ced-b2f0-544bc1704fcd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Testing Post User Login Route With Invalid email format",
              "fullTitle": "Integration Testing - Testing User Routes Testing Post User Login Route With Invalid email format",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let result = await request(server.app).post(\"/api/auth/login\")\n    .send({\n        \"email\": \"s\",\n        \"password\":\"ama123\",\n        \"type\":\"staff\"\n    })\nchai.assert.equal('\"email\" must be a valid email',result.body.Error,'Wrong Message Returned!')",
              "err": {},
              "uuid": "2ffee626-ecac-4adf-a50c-9c87f0552e8a",
              "parentUUID": "59e8def9-5913-4ced-b2f0-544bc1704fcd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5896a04c-ab8a-4c3e-a6d1-e8ca4d052cde",
            "accfa7a0-8d9f-418f-9182-8e0641b036c2",
            "2ffee626-ecac-4adf-a50c-9c87f0552e8a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2357,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "67624639-6763-4161-bca3-a057fb5d4524",
          "title": "Integration Testing - Testing If JWT Works Correctly",
          "fullFile": "G:\\Respo-Folder\\Visual Studio Code\\DLE Site\\Express Server-Backend\\tests\\integration-tests\\integration.test.js",
          "file": "\\tests\\integration-tests\\integration.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Testing If Jwt Authentication Works by Calling unauthorized Route",
              "fullTitle": "Integration Testing - Testing If JWT Works Correctly Testing If Jwt Authentication Works by Calling unauthorized Route",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let result = await request(server.app).post(\"/api/user/get/id\")\n    .send({\n        \"email\": \"am1a@gmail.com\",\n        \"password\":\"ama123\",\n        \"type\":\"staff\"\n    })\nchai.assert.equal(406,result.status,'Wrong Message Returned!')",
              "err": {},
              "uuid": "7d3ce7ab-91c5-43df-87f6-83c26f9b5354",
              "parentUUID": "67624639-6763-4161-bca3-a057fb5d4524",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7d3ce7ab-91c5-43df-87f6-83c26f9b5354"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "98b97f8d-e06e-4826-9112-2c0601462c3a",
          "title": "Integration Testing - Testing If User Works Correctly",
          "fullFile": "G:\\Respo-Folder\\Visual Studio Code\\DLE Site\\Express Server-Backend\\tests\\integration-tests\\integration.test.js",
          "file": "\\tests\\integration-tests\\integration.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Testing If User is rejected with Wrong Type",
              "fullTitle": "Integration Testing - Testing If User Works Correctly Testing If User is rejected with Wrong Type",
              "timedOut": false,
              "duration": 20,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let result = await request(server.app).post(\"/api/user/get/id\")\n    .set('Cookie', 'cookie=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiIyMzEwMDAiLCJlbWFpbCI6ImFtMWFAZ21haWwuY29tIiwidHlwZSI6InN0YWZmIiwiaWF0IjoxNjc1MjE5NDQ0fQ.H8gH_cHtm-JHMNEd4OwBl3mcmV2WsEVbW9Wd0c9m4_o')\n    .send({\n        \"email\": \"am1a@gmail.com\",\n        \"type\":\"none\"\n    })\nchai.assert.equal(500,result.status,'Wrong Message Returned!')",
              "err": {},
              "uuid": "eb0f3678-a86f-4fa8-b8dc-952a97e3f9a8",
              "parentUUID": "98b97f8d-e06e-4826-9112-2c0601462c3a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "eb0f3678-a86f-4fa8-b8dc-952a97e3f9a8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 20,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "35c6ae51-f425-493c-9ab9-61ed110e2748",
          "title": "Integration Testing - Testing If Subject Route Works Correctly",
          "fullFile": "G:\\Respo-Folder\\Visual Studio Code\\DLE Site\\Express Server-Backend\\tests\\integration-tests\\integration.test.js",
          "file": "\\tests\\integration-tests\\integration.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Testing If Subject Returns Subject with ID",
              "fullTitle": "Integration Testing - Testing If Subject Route Works Correctly Testing If Subject Returns Subject with ID",
              "timedOut": false,
              "duration": 400,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let result = await request(server.app).post(\"/api/subject/get/id\")\n    .set('Cookie', 'cookie=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiIyMzEwMDAiLCJlbWFpbCI6ImFtMWFAZ21haWwuY29tIiwidHlwZSI6InN0YWZmIiwiaWF0IjoxNjc1MjE5NDQ0fQ.H8gH_cHtm-JHMNEd4OwBl3mcmV2WsEVbW9Wd0c9m4_o')\n    .send({\n        \"_id\": \"S001\"\n    })\nchai.assert.equal(200,result.status,'Wrong Message Returned!')",
              "err": {},
              "uuid": "42c56f87-5ed1-471d-a5f7-90325f6c8c3b",
              "parentUUID": "35c6ae51-f425-493c-9ab9-61ed110e2748",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Testing If Subject Returns Subject Details",
              "fullTitle": "Integration Testing - Testing If Subject Route Works Correctly Testing If Subject Returns Subject Details",
              "timedOut": false,
              "duration": 218,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let result = await request(server.app).post(\"/api/subject/get/id\")\n    .set('Cookie', 'cookie=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiIyMzEwMDAiLCJlbWFpbCI6ImFtMWFAZ21haWwuY29tIiwidHlwZSI6InN0YWZmIiwiaWF0IjoxNjc1MjE5NDQ0fQ.H8gH_cHtm-JHMNEd4OwBl3mcmV2WsEVbW9Wd0c9m4_o')\n    .send({\n        \"_id\": \"S001\"\n    })\nchai.assert.equal('Economics',result.body.name,'Wrong Message Returned!')",
              "err": {},
              "uuid": "bbd1f55f-b53a-4bbf-8224-12a33685d9b4",
              "parentUUID": "35c6ae51-f425-493c-9ab9-61ed110e2748",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Testing If Find Subject Returns Status 400 on Wrong ID",
              "fullTitle": "Integration Testing - Testing If Subject Route Works Correctly Testing If Find Subject Returns Status 400 on Wrong ID",
              "timedOut": false,
              "duration": 234,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let result = await request(server.app).post(\"/api/subject/get/id\")\n    .set('Cookie', 'cookie=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiIyMzEwMDAiLCJlbWFpbCI6ImFtMWFAZ21haWwuY29tIiwidHlwZSI6InN0YWZmIiwiaWF0IjoxNjc1MjE5NDQ0fQ.H8gH_cHtm-JHMNEd4OwBl3mcmV2WsEVbW9Wd0c9m4_o')\n    .send({\n        \"_id\": \"S01\"\n    })\nconsole.log(result)\nchai.assert.equal(400,result.body.status,'Wrong Message Returned!')",
              "err": {},
              "uuid": "b6fece60-40de-4b18-8c8b-bec3cd1b6e0d",
              "parentUUID": "35c6ae51-f425-493c-9ab9-61ed110e2748",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "42c56f87-5ed1-471d-a5f7-90325f6c8c3b",
            "bbd1f55f-b53a-4bbf-8224-12a33685d9b4",
            "b6fece60-40de-4b18-8c8b-bec3cd1b6e0d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 852,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "ff6209cf-6c5c-4005-addc-ecf821b91616",
          "title": "Integration Testing - Testing If Assignment Route Works Correctly",
          "fullFile": "G:\\Respo-Folder\\Visual Studio Code\\DLE Site\\Express Server-Backend\\tests\\integration-tests\\integration.test.js",
          "file": "\\tests\\integration-tests\\integration.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Testing If Assignment Returns Assignment with ID",
              "fullTitle": "Integration Testing - Testing If Assignment Route Works Correctly Testing If Assignment Returns Assignment with ID",
              "timedOut": false,
              "duration": 160,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let result = await request(server.app).post(\"/api/assignment/get/id\")\n    .set('Cookie', 'cookie=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiIyMzEwMDAiLCJlbWFpbCI6ImFtMWFAZ21haWwuY29tIiwidHlwZSI6InN0YWZmIiwiaWF0IjoxNjc1MjE5NDQ0fQ.H8gH_cHtm-JHMNEd4OwBl3mcmV2WsEVbW9Wd0c9m4_o')\n    .send({\n        \"id\": \"S002-A01\",\n        \"subject\": \"S002\"\n    })\nchai.assert.equal(200,result.status,'Wrong Message Returned!')",
              "err": {},
              "uuid": "19ef179f-dcd5-481f-86b3-29106ca797ed",
              "parentUUID": "ff6209cf-6c5c-4005-addc-ecf821b91616",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Testing If Assignment Has at least One Attachment",
              "fullTitle": "Integration Testing - Testing If Assignment Route Works Correctly Testing If Assignment Has at least One Attachment",
              "timedOut": false,
              "duration": 151,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let result = await request(server.app).post(\"/api/assignment/get/id\")\n    .set('Cookie', 'cookie=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiIyMzEwMDAiLCJlbWFpbCI6ImFtMWFAZ21haWwuY29tIiwidHlwZSI6InN0YWZmIiwiaWF0IjoxNjc1MjE5NDQ0fQ.H8gH_cHtm-JHMNEd4OwBl3mcmV2WsEVbW9Wd0c9m4_o')\n    .send({\n        \"id\": \"S002-A01\",\n        \"subject\": \"S002\"\n    })\nchai.assert.equal(true,result.body.url.length > 0,'Wrong Message Returned!')",
              "err": {},
              "uuid": "8653eb43-cd2a-44bf-ad8a-b4d4ebd99444",
              "parentUUID": "ff6209cf-6c5c-4005-addc-ecf821b91616",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Testing If Find Assignment Returns Status 400 on Wrong ID",
              "fullTitle": "Integration Testing - Testing If Assignment Route Works Correctly Testing If Find Assignment Returns Status 400 on Wrong ID",
              "timedOut": false,
              "duration": 222,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let result = await request(server.app).post(\"/api/subject/get/id\")\n    .set('Cookie', 'cookie=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiIyMzEwMDAiLCJlbWFpbCI6ImFtMWFAZ21haWwuY29tIiwidHlwZSI6InN0YWZmIiwiaWF0IjoxNjc1MjE5NDQ0fQ.H8gH_cHtm-JHMNEd4OwBl3mcmV2WsEVbW9Wd0c9m4_o')\n    .send({\n        \"_id\": \"S01\"\n    })\nconsole.log(result)\nchai.assert.equal(400,result.body.status,'Wrong Message Returned!')",
              "err": {},
              "uuid": "a54f3e12-c69e-4f34-bcdd-4e0b2d079171",
              "parentUUID": "ff6209cf-6c5c-4005-addc-ecf821b91616",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "19ef179f-dcd5-481f-86b3-29106ca797ed",
            "8653eb43-cd2a-44bf-ad8a-b4d4ebd99444",
            "a54f3e12-c69e-4f34-bcdd-4e0b2d079171"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 533,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}