{
  "stats": {
    "suites": 6,
    "tests": 12,
    "passes": 12,
    "pending": 0,
    "failures": 0,
    "start": "2023-02-01T11:55:55.100Z",
    "end": "2023-02-01T11:55:59.196Z",
    "duration": 4096,
    "testsRegistered": 12,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "83ba1df2-b31c-4752-8386-78fe88913a01",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8abb123f-78e9-4606-9464-9f4779af4f1c",
          "title": "Integration Testing - Testing Basic Get Route For Health Checks",
          "fullFile": "G:\\Respo-Folder\\Visual Studio Code\\DLE Site\\Express Server-Backend\\tests\\integration-tests\\integration.test.js",
          "file": "\\tests\\integration-tests\\integration.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Testing Basic Get Route",
              "fullTitle": "Integration Testing - Testing Basic Get Route For Health Checks Testing Basic Get Route",
              "timedOut": false,
              "duration": 36,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(server.app).get(\"/\")\n    .expect(200)\n    .expect({\"status\":200,\"message\":\"Server Loaded Successfully\",\"Description\":\"DLE Backend Server RestAPI For a MEAN Application Project\",\"Port\":\"5500\",\"BaseUrl\":\"http://localhost:5500\"},done);",
              "err": {},
              "uuid": "ffa0d732-01ea-4a1e-aafc-9f8335d78c95",
              "parentUUID": "8abb123f-78e9-4606-9464-9f4779af4f1c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ffa0d732-01ea-4a1e-aafc-9f8335d78c95"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 36,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "4a16df6d-57c0-4331-8845-f7f28b1e381d",
          "title": "Integration Testing - Testing User Routes",
          "fullFile": "G:\\Respo-Folder\\Visual Studio Code\\DLE Site\\Express Server-Backend\\tests\\integration-tests\\integration.test.js",
          "file": "\\tests\\integration-tests\\integration.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Testing Post User Login Route With Status Returned from Database",
              "fullTitle": "Integration Testing - Testing User Routes Testing Post User Login Route With Status Returned from Database",
              "timedOut": false,
              "duration": 2512,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let result = await request(server.app).post(\"/api/auth/login\")\n    .send({\n        \"email\": \"am1a@gmail.com\",\n        \"password\":\"ama123\",\n        \"type\":\"staff\"\n    })\nchai.assert.equal(200,result.status,'Wrong Message Returned!')",
              "err": {},
              "uuid": "94703460-a8f1-4080-82c6-6961e69301f6",
              "parentUUID": "4a16df6d-57c0-4331-8845-f7f28b1e381d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Testing Post User Login Route With Invalid User Credentials",
              "fullTitle": "Integration Testing - Testing User Routes Testing Post User Login Route With Invalid User Credentials",
              "timedOut": false,
              "duration": 249,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let result = await request(server.app).post(\"/api/auth/login\")\n    .send({\n        \"email\": \"am1a@gmail.com\",\n        \"password\":\"ama\",\n        \"type\":\"staff\"\n    })\nchai.assert.equal(400,result.body.Status,'Wrong Message Returned!')",
              "err": {},
              "uuid": "2a5ae7c3-b2e9-4706-9558-348e6132c84f",
              "parentUUID": "4a16df6d-57c0-4331-8845-f7f28b1e381d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Testing Post User Login Route With Invalid email format",
              "fullTitle": "Integration Testing - Testing User Routes Testing Post User Login Route With Invalid email format",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let result = await request(server.app).post(\"/api/auth/login\")\n    .send({\n        \"email\": \"s\",\n        \"password\":\"ama123\",\n        \"type\":\"staff\"\n    })\nchai.assert.equal('\"email\" must be a valid email',result.body.Error,'Wrong Message Returned!')",
              "err": {},
              "uuid": "e4349c2d-f177-4b02-b3e2-2860112d1203",
              "parentUUID": "4a16df6d-57c0-4331-8845-f7f28b1e381d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "94703460-a8f1-4080-82c6-6961e69301f6",
            "2a5ae7c3-b2e9-4706-9558-348e6132c84f",
            "e4349c2d-f177-4b02-b3e2-2860112d1203"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2768,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "c84eb615-d0a6-4443-96df-09e5f4588adc",
          "title": "Integration Testing - Testing If JWT Works Correctly",
          "fullFile": "G:\\Respo-Folder\\Visual Studio Code\\DLE Site\\Express Server-Backend\\tests\\integration-tests\\integration.test.js",
          "file": "\\tests\\integration-tests\\integration.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Testing If Jwt Authentication Works by Calling unauthorized Route",
              "fullTitle": "Integration Testing - Testing If JWT Works Correctly Testing If Jwt Authentication Works by Calling unauthorized Route",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let result = await request(server.app).post(\"/api/user/get/id\")\n    .send({\n        \"email\": \"am1a@gmail.com\",\n        \"password\":\"ama123\",\n        \"type\":\"staff\"\n    })\nchai.assert.equal(406,result.status,'Wrong Message Returned!')",
              "err": {},
              "uuid": "a7b4be5c-ab5a-4823-8b20-8e7eefdb19ca",
              "parentUUID": "c84eb615-d0a6-4443-96df-09e5f4588adc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a7b4be5c-ab5a-4823-8b20-8e7eefdb19ca"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "6f89fb1e-6274-4b4b-8c1f-538f3234692c",
          "title": "Integration Testing - Testing If User Works Correctly",
          "fullFile": "G:\\Respo-Folder\\Visual Studio Code\\DLE Site\\Express Server-Backend\\tests\\integration-tests\\integration.test.js",
          "file": "\\tests\\integration-tests\\integration.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Testing If User is rejected with Wrong Type",
              "fullTitle": "Integration Testing - Testing If User Works Correctly Testing If User is rejected with Wrong Type",
              "timedOut": false,
              "duration": 17,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let result = await request(server.app).post(\"/api/user/get/id\")\n    .set('Cookie', 'cookie=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiIyMzEwMDAiLCJlbWFpbCI6ImFtMWFAZ21haWwuY29tIiwidHlwZSI6InN0YWZmIiwiaWF0IjoxNjc1MjE5NDQ0fQ.H8gH_cHtm-JHMNEd4OwBl3mcmV2WsEVbW9Wd0c9m4_o')\n    .send({\n        \"email\": \"am1a@gmail.com\",\n        \"type\":\"none\"\n    })\nchai.assert.equal(500,result.status,'Wrong Message Returned!')",
              "err": {},
              "uuid": "33de4814-9e83-42fa-af87-03083dc6b739",
              "parentUUID": "6f89fb1e-6274-4b4b-8c1f-538f3234692c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "33de4814-9e83-42fa-af87-03083dc6b739"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "f785dbca-4bbd-41b7-9666-8a2fb4329f2d",
          "title": "Integration Testing - Testing If Subject Route Works Correctly",
          "fullFile": "G:\\Respo-Folder\\Visual Studio Code\\DLE Site\\Express Server-Backend\\tests\\integration-tests\\integration.test.js",
          "file": "\\tests\\integration-tests\\integration.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Testing If Subject Returns Subject with ID",
              "fullTitle": "Integration Testing - Testing If Subject Route Works Correctly Testing If Subject Returns Subject with ID",
              "timedOut": false,
              "duration": 250,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let result = await request(server.app).post(\"/api/subject/get/id\")\n    .set('Cookie', 'cookie=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiIyMzEwMDAiLCJlbWFpbCI6ImFtMWFAZ21haWwuY29tIiwidHlwZSI6InN0YWZmIiwiaWF0IjoxNjc1MjE5NDQ0fQ.H8gH_cHtm-JHMNEd4OwBl3mcmV2WsEVbW9Wd0c9m4_o')\n    .send({\n        \"_id\": \"S001\"\n    })\nchai.assert.equal(200,result.status,'Wrong Message Returned!')",
              "err": {},
              "uuid": "98bd807f-8fad-4ded-ab5e-83df65dde3b2",
              "parentUUID": "f785dbca-4bbd-41b7-9666-8a2fb4329f2d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Testing If Subject Returns Subject Details",
              "fullTitle": "Integration Testing - Testing If Subject Route Works Correctly Testing If Subject Returns Subject Details",
              "timedOut": false,
              "duration": 157,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let result = await request(server.app).post(\"/api/subject/get/id\")\n    .set('Cookie', 'cookie=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiIyMzEwMDAiLCJlbWFpbCI6ImFtMWFAZ21haWwuY29tIiwidHlwZSI6InN0YWZmIiwiaWF0IjoxNjc1MjE5NDQ0fQ.H8gH_cHtm-JHMNEd4OwBl3mcmV2WsEVbW9Wd0c9m4_o')\n    .send({\n        \"_id\": \"S001\"\n    })\nchai.assert.equal('Economics',result.body.name,'Wrong Message Returned!')",
              "err": {},
              "uuid": "d0f91226-8104-4555-8e75-68a98193fb49",
              "parentUUID": "f785dbca-4bbd-41b7-9666-8a2fb4329f2d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Testing If Find Subject Returns Status 400 on Wrong ID",
              "fullTitle": "Integration Testing - Testing If Subject Route Works Correctly Testing If Find Subject Returns Status 400 on Wrong ID",
              "timedOut": false,
              "duration": 246,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let result = await request(server.app).post(\"/api/subject/get/id\")\n    .set('Cookie', 'cookie=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiIyMzEwMDAiLCJlbWFpbCI6ImFtMWFAZ21haWwuY29tIiwidHlwZSI6InN0YWZmIiwiaWF0IjoxNjc1MjE5NDQ0fQ.H8gH_cHtm-JHMNEd4OwBl3mcmV2WsEVbW9Wd0c9m4_o')\n    .send({\n        \"_id\": \"S01\"\n    })\nconsole.log(result)\nchai.assert.equal(400,result.body.status,'Wrong Message Returned!')",
              "err": {},
              "uuid": "4d823823-849e-4d8c-b220-9817600dcf28",
              "parentUUID": "f785dbca-4bbd-41b7-9666-8a2fb4329f2d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "98bd807f-8fad-4ded-ab5e-83df65dde3b2",
            "d0f91226-8104-4555-8e75-68a98193fb49",
            "4d823823-849e-4d8c-b220-9817600dcf28"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 653,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "be27811c-3aa0-44ca-88ba-0c40d4303de6",
          "title": "Integration Testing - Testing If Assignment Route Works Correctly",
          "fullFile": "G:\\Respo-Folder\\Visual Studio Code\\DLE Site\\Express Server-Backend\\tests\\integration-tests\\integration.test.js",
          "file": "\\tests\\integration-tests\\integration.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Testing If Assignment Returns Assignment with ID",
              "fullTitle": "Integration Testing - Testing If Assignment Route Works Correctly Testing If Assignment Returns Assignment with ID",
              "timedOut": false,
              "duration": 169,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let result = await request(server.app).post(\"/api/assignment/get/id\")\n    .set('Cookie', 'cookie=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiIyMzEwMDAiLCJlbWFpbCI6ImFtMWFAZ21haWwuY29tIiwidHlwZSI6InN0YWZmIiwiaWF0IjoxNjc1MjE5NDQ0fQ.H8gH_cHtm-JHMNEd4OwBl3mcmV2WsEVbW9Wd0c9m4_o')\n    .send({\n        \"id\": \"S002-A01\",\n        \"subject\": \"S002\"\n    })\nchai.assert.equal(200,result.status,'Wrong Message Returned!')",
              "err": {},
              "uuid": "916d2299-c338-4831-8608-3348516b7d81",
              "parentUUID": "be27811c-3aa0-44ca-88ba-0c40d4303de6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Testing If Assignment Has at least One Attachment",
              "fullTitle": "Integration Testing - Testing If Assignment Route Works Correctly Testing If Assignment Has at least One Attachment",
              "timedOut": false,
              "duration": 177,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let result = await request(server.app).post(\"/api/assignment/get/id\")\n    .set('Cookie', 'cookie=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiIyMzEwMDAiLCJlbWFpbCI6ImFtMWFAZ21haWwuY29tIiwidHlwZSI6InN0YWZmIiwiaWF0IjoxNjc1MjE5NDQ0fQ.H8gH_cHtm-JHMNEd4OwBl3mcmV2WsEVbW9Wd0c9m4_o')\n    .send({\n        \"id\": \"S002-A01\",\n        \"subject\": \"S002\"\n    })\nchai.assert.equal(true,result.body.url.length > 0,'Wrong Message Returned!')",
              "err": {},
              "uuid": "0e947dab-2393-48a5-8efe-355d2bc628cb",
              "parentUUID": "be27811c-3aa0-44ca-88ba-0c40d4303de6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Testing If Find Assignment Returns Status 400 on Wrong ID",
              "fullTitle": "Integration Testing - Testing If Assignment Route Works Correctly Testing If Find Assignment Returns Status 400 on Wrong ID",
              "timedOut": false,
              "duration": 234,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let result = await request(server.app).post(\"/api/subject/get/id\")\n    .set('Cookie', 'cookie=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiIyMzEwMDAiLCJlbWFpbCI6ImFtMWFAZ21haWwuY29tIiwidHlwZSI6InN0YWZmIiwiaWF0IjoxNjc1MjE5NDQ0fQ.H8gH_cHtm-JHMNEd4OwBl3mcmV2WsEVbW9Wd0c9m4_o')\n    .send({\n        \"_id\": \"S01\"\n    })\nconsole.log(result)\nchai.assert.equal(400,result.body.status,'Wrong Message Returned!')",
              "err": {},
              "uuid": "a35d3646-6a6a-4f48-8550-68a74cb929ce",
              "parentUUID": "be27811c-3aa0-44ca-88ba-0c40d4303de6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "916d2299-c338-4831-8608-3348516b7d81",
            "0e947dab-2393-48a5-8efe-355d2bc628cb",
            "a35d3646-6a6a-4f48-8550-68a74cb929ce"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 580,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}